#!/bin/bash
set -e
git submodule update --init

CFU_ROOT="$(dirname $(dirname $(realpath ${BASH_SOURCE[0]})))"

# Verify dependencies that can be installed with apt (if available)
missing=()

if ! which gcc >/dev/null; then
    missing+=(gcc)
fi
if ! which make >/dev/null; then
    missing+=(make)
fi
if ! which openocd >/dev/null; then
    missing+=(openocd)
fi
if ! which yosys >/dev/null; then
    missing+=(yosys)
fi
if ! which expect >/dev/null; then
    missing+=(expect)
fi
if ! which ccache >/dev/null; then
    missing+=(ccache)
fi
if ! which verilator >/dev/null; then
    missing+=(verilator libevent-dev libjson-c-dev)
fi
if ! which curl >/dev/null; then
    missing+=(curl)
fi
if ! which unzip >/dev/null; then
    missing+=(unzip)
fi
if ! (apt list -i | grep libusb-1.0-0-dev) ; then
    missing+=(libusb-1.0-0-dev libftdi1-dev)
fi

echo Missing:
echo $missing

in_ci=0
if [ $# -gt 0 ] ; then
  if [ $1 == "-ci" ] ; then
    in_ci=1
  fi
fi

if [ ${#missing[@]} -gt 0 ]; then
    echo "Missing packages: ${missing[@]}" >&2
    if which apt >/dev/null; then
        if [ $in_ci -gt 0 ]; then
            sudo apt install -y "${missing[@]}"
        else
            echo -n "Install [y]/n? " >&2
            answer=$(read)
            if [ "$answer" == "y" -o -z "$answer" ]; then
                sudo apt install "${missing[@]}"
            fi
        fi
    else
        exit 1
    fi
fi


# Build flashrom after installing dependencies
echo "BUILDING FLASHROM"
(
  cd ${CFU_ROOT}/third_party/flashrom
  make -j4 CONFIG_ENABLE_LIBPCI_PROGRAMMERS=no
)

RENODE_VERSION="1.12.0+20210705gita5fe374a"
RENODE_VERSION_SPLIT=${RENODE_VERSION//"+"/ }
RENODE_VERSION_SPLIT=${RENODE_VERSION_SPLIT//"git"/ }
IFS=' ' read -r RENODE_VERSION_NO x RENODE_VERSION_SHA <<<"$RENODE_VERSION_SPLIT"
RENODE_DIR=${CFU_ROOT}/third_party/renode
# Get Renode if not installed
if [ ! -e "${RENODE_DIR}/renode" ]; then
    wget "https://dl.antmicro.com/projects/renode/builds/renode-${RENODE_VERSION}.linux-portable.tar.gz"
    mkdir ${RENODE_DIR}
    tar xf  renode-*.linux-portable.tar.gz -C ${RENODE_DIR} --strip-components=1
    rm renode-${RENODE_VERSION}.linux-portable.tar.gz
    echo "To use Renode from any location add it to system path:"
    echo "export PATH=${RENODE_DIR}:\$PATH\""
    echo ""
    echo "If you wish to run automated Robot tests using Renode, run:"
    echo "python3 -m pip install -r ${RENODE_DIR}/tests/requirements.txt"
    echo ""
elif ! ${RENODE_DIR}/renode --version | grep "${RENODE_VERSION_NO}.*${RENODE_VERSION_SHA}" >/dev/null; then
    echo "Warning: Your Renode version does not match the required one (${RENODE_VERSION})"
fi

# Check GCC
if ! which riscv64-unknown-elf-gcc >/dev/null; then
    echo "Error: RISCV GCC toolchain not found. Please install one, following the instructions at"
    echo "https://cfu-playground.readthedocs.io/en/latest/setup-guide.html#step-3-install-riscv-toolchain"

elif ! riscv64-unknown-elf-gcc --version | grep 'SiFive GCC 8.3.0-2020.04.1.' >/dev/null; then
    echo "Unsupported version of riscv64-unknown-elf-gcc. SiFive GCC 8.3.0-2020.04.1 is known to work." >&2
    echo "To install this version, follow the instructions at"
    echo "https://cfu-playground.readthedocs.io/en/latest/setup-guide.html#step-3-install-riscv-toolchain"
fi

# Verify other dependencies

if ! which vivado >/dev/null; then
    echo "Please install vivado" >&2
    exit
fi

echo "Setup complete"
